@model MvcAgenda.Domain.Entities.aevent

@{
    ViewBag.Title = "Edit event";
}

<h2>Edit</h2>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>aevent</legend>

        @Html.HiddenFor(model => model.id)

        <div class="editor-label">
            @Html.LabelFor(model => model.title)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.title)
            @Html.ValidationMessageFor(model => model.title)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.description)
            @Html.ValidationMessageFor(model => model.description)
        </div>

   @if (User.Identity.Name == "silvia")
   {
             <div class="editor-label">
            @Html.LabelFor(model => model.user_id)
        </div>
       <div class="editor-field">
            @Html.DropDownListFor(model => model.user_id, (List<SelectListItem>)ViewBag.users)
            @Html.ValidationMessageFor(model => model.user_id)
        </div>
   }
   else
   {
       Html.RenderAction("UserHiddenField", new { controller = "Users", username = User.Identity.Name });
   }

        <div class="editor-label">
            @Html.LabelFor(model => model.location_id)
        </div>
        <div class="editor-field">
            @Html.HiddenFor(model => model.location.city)
            @Html.HiddenFor(model => model.location.country)
            @Html.DisplayFor(model => model.location.city) OR
            @Html.EditorFor(model => model.location_id)
            @Html.ValidationMessageFor(model => model.location_id)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.startTime)
        </div>
        <div class="editor-field">
         @if (Model.startTime > DateTime.Now)
         { 
            @Html.EditorFor(model => model.startTime)
            @Html.ValidationMessageFor(model => model.startTime)
         }
         else
         { 
         @Html.DisplayFor(model => model.startTime)
         @Html.HiddenFor(model => model.startTime)
         }

        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.endTime)
        </div>
        <div class="editor-field">
         @if (Model.startTime > DateTime.Now)
         { 
            @Html.EditorFor(model => model.endTime)
            @Html.ValidationMessageFor(model => model.endTime)
         }
         else
         { 
         @Html.DisplayFor(model => model.endTime)
         @Html.HiddenFor(model => model.endTime)
         }
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.url)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.url)
            @Html.ValidationMessageFor(model => model.url)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

@if (User.Identity.Name == "silvia")
{
     
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
